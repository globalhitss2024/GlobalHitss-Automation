# ====================================================================
# Pipeline para validación de scripts ETL
# Autor: Johanana Pérez
# Descripción: Este pipeline valida la existencia y sintaxis de los scripts ETL
# Fecha: junio 2025============================================================

name: ETL Validation Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente de validación' 
        required: true
        default: 'test'
        type: choice
        options:
        - test  # Para pruebas locales
        - staging  # Para pruebas pre-producción

env:
  PYTHON_VERSION: '3.10'  # Versión estable que usamos en producción

jobs:
  validate-scripts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest

      - name: Validate ETL Scripts
        run: |
          # Lista de scripts core que deben existir siempre
          CORE_SCRIPTS=(
            # Scripts de cancelaciones
            "cargue_datos_crudos_base_canceladas/cargue_datos_crudos_canceladas.py"
            "cargue_datos_crudos_base_canceladas_999/cargue_datos_crudos_canceladas_999.py"
            
            # Scripts de digitaciones y relacionados
            "cargue_datos_crudos_base_digitadas/cargue_datos_crudos_digitadas.py"
            "cargue_datos_crudos_base_digitadas_up/cargue_datos_crudos_digitadas_up.py"
            "cargue_datos_crudos_denodo_digitadas_rr/cargue_datos_crudos_digitadas_rr.py"
            
            # Scripts de instalaciones y servicios
            "cargue_datos_crudos_base_instaladas/cargue_datos_crudos_instaladas.py"
            "cargue_datos_crudos_base_instaladas_up/cargue_datos_crudos_instaladas_up.py"
            "cargue_datos_crudos_base_instaladas_999/cargue_datos_crudos_instaladas_999.py"
            "cargue_datos_crudos_base_cloud/cargue_datos_crudos_cloud.py"
            "cargue_datos_crudos_base_ngn_larga_distancia_nacional/cargue_datos_crudos_base_ngn_larga_distancia_nacional.py"
            "cargue_datos_crudos_base_red_fttx/cargue_datos_crudos_red_fttx.py"
            "cargue_datos_crudos_base_ventas_compras/cargue_datos_crudos_ventas_compra.py"
            "cargue_datos_crudos_servicios_movil/fuentes_cruda_servicios_movil.py"
            
            # Scripts de datos y ventas
            "cargue_datos_crudos_ventas_cloud/ventas_cloud.py"
            "cargue_datos_crudos_ventas_manuales/Ventas_manuales.py"
            "cargue_datos_crudos_web_scraping_avanza/web_scraping_avanza.py"
            "cargue_datos_crudos_fo/cargue_datos_crudos_fo/cargue_datos_crudos_fo.py"
            
            # Scripts de altas y metas
            "cargue_datos_crudos_altas_segmento_empresas/cargue_datos_crudos_altas_segmento_empresas.py"
            "cargue_datos_crudos_metas/cargue_datos_crudos_metas.py"
            "cargue_datos_crudos_metas_oficial/cargue_datos_crudos_metas_oficial.py"
            "cargue_datos_crudos_metas_empresas/cargue_datos_crudos_metas_empresas.py"
            
            # Scripts principales y otros
            "cargue_datos_crudos_conciliaciones/conciliaciones.py"
            "cargue_datos_crudos_legalizadas/cargue_datos_crudos_legalizadas.py"
            "cargue_datos_crudos_transfers/transfers_crudos.py"
            "cargue_datos_crudos_valor_agregado/cargue_datos_crudos_valor_agregado.py"
            "cargue_datos_crudos_valor_agregado/cargue_datos_crudos_valor_agregado_bk.py"
            "cargue_datos_crudos_causales/fuentes_crudas_causales.py"
          )

          # Scripts opcionales que pueden no existir
          OPTIONAL_SCRIPTS=(
            "cargue_datos_crudos_base_digitadas_comercial/fuentes_crudas_digitadas_comercial.py"
            "cargue_datos_crudos_base_liquidacion_fija/cargue_datos_crudos_liquidacion_fija.py" 
            "cargue_datos_crudos_reports_comercial/reports_comercial.py"
            "cargue_datos_crudos_otros_movimientos/otros_movimientos.py"
          )

          VALIDATION_FAILED=0

          validate_script() {
            local script=$1
            local is_core=$2

            echo "Validando: $script"

            if [ ! -f "$script" ]; then
              if [ "$is_core" = true ]; then
                echo "ERROR: Script core no encontrado: $script"
                return 1
              else
                echo "AVISO: Script opcional no encontrado: $script" 
                return 0
              fi
            fi

            if ! python -m py_compile "$script"; then
              echo "ERROR: Error de sintaxis en: $script"
              return 1
            fi

            echo "OK: Script validado: $script"
            return 0
          }

          # Validar scripts core
          echo "=== Validando scripts core ==="
          for script in "${CORE_SCRIPTS[@]}"; do
            if ! validate_script "$script" true; then
              VALIDATION_FAILED=1
            fi
          done

          # Validar scripts opcionales
          echo -e "\n=== Validando scripts opcionales ==="
          for script in "${OPTIONAL_SCRIPTS[@]}"; do
            validate_script "$script" false
          done

          exit $VALIDATION_FAILED